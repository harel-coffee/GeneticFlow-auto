3307355,The Next 700 Markup Languages,2000,0,7,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
74688787,A Semi-monad for Semi-structured Data (ICDT Version),2001,30,22,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
159637158,SIGPLAN Notices Special Issue on the Functional Programming Language Haskell,1992,0,12,1,1.0,2060729710,Philip Wadler,0,1.5867511895204103,-0.592387379783756
75510074,The audacity of hope thoughts on reclaiming the database dream (ETAPS invited lecture),2010,0,0,1,1.0,2060729710,Philip Wadler,0,-0.25864699210123737,-0.25690656315103977
147667397,The essence of functional programming (Invited talk),1997,24,40,1,1.0,2060729710,Philip Wadler,0,-0.5341488125097863,0.06195897921182333
46152395,Proceedings of the 35th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages,2008,0,0,2,0.0,281330718,George C. Necula,0,-0.1164726804531344,0.019252515865476
334915254,How to Declare an Imperative,1995,0,0,1,1.0,2060729710,Philip Wadler,0,1.428284306406398,-0.4942904329646493
1559686260,Projections for strictness analysis,1987,24,163,1,1.0,2060729710,Philip Wadler,0,-0.8290843884598891,0.11341031832634203
1506492451,Report on the Programming Language Haskell A Non-strict Purely Functional Language,1992,0,237,3,1.0,285480461,Brian Boutel,0,2.3358963089327034,-1.1129744172770426
1507155521,How to replace failure by a list of successes,1985,0,106,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
1491387272,Functional Programming Glasgow 1991 Proceedings of the 1991 Glasgow Workshop on Functional Programming Portree Isle of Skye 12-14 August 1991,1992,0,0,1,1.0,2060729710,Philip Wadler,0,-0.6248332813702047,-0.1755938429237039
1535796788,Practical Aspects of Declarative Languages 5th International Symposium PADL 2003 New Orleans LA USA January 13-14 2003 Proceedings,2003,0,0,1,1.0,2060729710,Philip Wadler,0,-0.3352915693527302,0.43644505428723546
1554222327,Type Classes in Haskell,1994,20,68,1,1.0,2060729710,Philip Wadler,0,-1.1364297841829103,-1.3438003444114162
1509348977,XQuery A typed functional language for querying XML,2003,0,9,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
1563480347,A Syntax for Linear Logic,1993,22,136,1,1.0,2060729710,Philip Wadler,0,-0.1654175202528589,0.2148552603110801
1528500212,The Glasgow Haskell Compiler A Retrospective,1992,9,25,1,1.0,2060729710,Philip Wadler,0,-0.374413032509832,0.17717321614738915
1574595139,The Audacity of Hope Thoughts on Reclaiming the Database Dream,2010,0,1,1,1.0,2060729710,Philip Wadler,0,-0.25864699210123737,-0.25690656315103977
1556489160,An Algebra for XML Query,2000,29,73,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
1511764546,A formal semantics of patterns in XSLT,2000,4,72,1,1.0,2060729710,Philip Wadler,0,-0.4416817244752091,-1.6048485555537129
1558109178,The Glasgow Haskell Compiler a technical overview,1993,1,176,1,1.0,2060729710,Philip Wadler,0,-0.5850443607722282,-0.05386572041535792
1596385180,Proceedings of the 2004 ACM SIGPLAN workshop on Erlang,2004,0,0,1,1.0,2060729710,Philip Wadler,0,-0.3430659373096439,0.18541495362138155
1937976299,The Essence of Form Abstraction,2008,28,26,3,1.0,1481625488,Ezra Cooper,0,2.488359217073858,-1.241898229602508
1913417724,Leftover curry and reheated Pizza how functional programming nourishes software reuse,1998,9,12,2,0.711475,248131350,Martin Odersky,0,-2.5009209421689302,0.39812001209065767
1913880602,The Essence of XML (Preliminary Version),2002,10,3,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
1833440862,Functional Programming An Angry Half-Dozen,1997,11,15,1,1.0,2060729710,Philip Wadler,0,-0.6034830173434111,-0.475715711707528
1974921390,Monads and composable continuations,1994,16,68,1,1.0,2060729710,Philip Wadler,0,-0.21074156090418916,0.4742092330438784
1968195858,The RPC calculus,2009,25,12,2,1.0,1481625488,Ezra Cooper,0,0.33743313604318675,-0.28062032333582326
1964803245,Functional programming in education â€“ Introduction,1993,0,6,1,1.0,2060729710,Philip Wadler,0,0.6529382257301143,-0.9505926691572189
1969661839,A reflection on call-by-value,1997,28,74,1,1.0,2060729710,Philip Wadler,0,-1.209724294356829,-1.600680790367831
2007397391,A practical theory of language-integrated query,2013,37,55,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
1998873876,A reflection on call-by-value,1996,16,22,1,1.0,2060729710,Philip Wadler,0,-0.39576753910977575,0.0287252406268124
2000804855,MSL a model for W3C XML Schema,2002,9,33,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2002866920,A practical subtyping system for Erlang,1997,18,112,1,1.0,2060729710,Philip Wadler,0,-0.5181651258116645,-0.31312625503798297
2010349279,EDITORIAL A HOT opportunity,1997,0,3,1,1.0,2060729710,Philip Wadler,0,-0.5961207862279603,-0.07965475754656284
2031847002,An angry half-dozen,1998,7,23,1,1.0,2060729710,Philip Wadler,0,-0.4405033128470566,-0.10604669891814607
2032249605,A second look at overloading,1995,33,39,2,0.657503,248131350,Martin Odersky,0,-0.34351087839703426,-0.06977008854913816
2030663607,A call-by-need lambda calculus,1995,43,202,4,0.0,113813022,Matthias Felleisen,0,-0.3140295660529483,-1.911046840560901
2011648260,Once upon a type,1995,30,129,2,0.0,2011613385,Christian Mossin,0,-0.1164726804531344,0.019252515865476
2033348393,Featherweight Java a minimal core calculus for Java and GJ,2001,29,791,2,0.0,1988947184,Benjamin C. Pierce,0,-3.085494043651918,-0.1029755895260171
2053198071,Call-by-value is dual to call-by-name,2003,29,100,1,1.0,2060729710,Philip Wadler,0,-0.8902486767862368,-1.0969191703734495
2037984920,The essence of functional programming,1992,29,563,1,1.0,2060729710,Philip Wadler,0,-0.7225345577432681,-0.12932737343816758
2062838731,The call-by-need lambda calculus,1998,39,108,3,0.711475,248131350,Martin Odersky,0,-0.7628236878227967,-0.6392626735260633
2062950667,Report on the programming language Haskell a non-strict purely functional language version 12,1992,16,714,3,1.0,285480461,Brian Boutel,0,0.8793904707777779,-0.10510606696908327
2059895047,How to make ad-hoc polymorphism less ad hoc,1989,16,598,1,1.0,2060729710,Philip Wadler,0,-1.0356450430064814,-1.5731484924606463
2057292961,Theorems for free,1989,24,588,1,1.0,2060729710,Philip Wadler,0,-0.37566561534260257,-0.1366295482269304
2078420514,Fixing some space leaks with a garbage collector,1987,4,33,1,1.0,2060729710,Philip Wadler,0,-0.6139440115720971,-0.6663494347606335
2087404516,How to declare an imperative,1997,57,120,1,1.0,2060729710,Philip Wadler,0,0.27669817379805045,-0.11029581367273447
2080377751,Experience with an applicative string processing language,1980,14,34,1,1.0,2060729710,Philip Wadler,0,-0.6115708215586992,-0.2801151573785847
2078944436,Imperative functional programming,1993,22,1101,1,1.0,2060729710,Philip Wadler,0,1.9986161184308746,0.19825086635824474
2087983393,Typecasting actors from Akka to TAkka,2014,13,10,1,1.0,2060729710,Philip Wadler,0,-0.9980762131519617,-0.011884717467727698
2095136535,Type classes in Haskell,1996,31,174,1,1.0,2060729710,Philip Wadler,0,-1.1816975587965965,-1.3085822371142022
2086401600,Type systems for object-oriented programming,1994,0,4,1,1.0,2060729710,Philip Wadler,0,1.669536475688123,-0.37912301598177334
2097805327,Listlessness is better than laziness Lazy evaluation and garbage collection at compile-time,1984,23,61,1,1.0,2060729710,Philip Wadler,0,-0.9931307112209478,-0.6712659973778353
2103883102,A simple language is also a functional language,1985,3,0,1,1.0,2060729710,Philip Wadler,0,-0.22277494669711553,-0.10366454651532064
2088295995,Blame and coercion together again for the first time,2015,38,22,2,0.0,96750307,Jeremy G. Siek,0,-0.2950172855686018,-0.11725020498396271
2084804301,The marriage of effects and monads,1998,42,98,1,1.0,2060729710,Philip Wadler,0,0.03345852050475136,0.3420741533754173
2101344958,Faith evolution and programming languages from Haskell to Java to links,2006,0,0,1,1.0,2060729710,Philip Wadler,0,0.7034625581618774,-0.44652308372494354
2081535979,MSL â€” a model for W3C XML schema,2001,7,22,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2138552902,Propositions as sessions,2014,31,56,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2136202785,Monads for Functional Programming,1995,25,389,1,1.0,2060729710,Philip Wadler,0,-0.3146203570310014,0.06947667294550217
2142401116,Is there a use for linear logic,1991,14,93,1,1.0,2060729710,Philip Wadler,0,-0.1654175202528589,0.2148552603110801
2136327713,Links web programming without tiers,2006,53,255,3,1.0,1481625488,Ezra Cooper,0,-0.3886702613583721,-0.20360327101700598
2112774031,A history of Haskell being lazy with class,2007,265,215,1,1.0,2060729710,Philip Wadler,0,-0.09562750102709054,-0.3803291903107055
2133546079,Pizza into Java translating theory into practice,1997,24,369,2,0.711475,248131350,Martin Odersky,0,-2.8309195801409794,0.36533611737635646
2122339407,Everything old is new again quoted domain-specific languages,2016,59,19,3,1.0,941856017,Shayan Najd,0,-0.2366002606599715,0.0668458755185094
2137252778,A Statically Safe Alternative to Virtual Types,1998,17,120,3,0.711475,248131350,Martin Odersky,0,-0.31341708089797066,-0.11531142944089345
2128496924,Blame for all,2011,25,71,3,0.0,96750307,Jeremy G. Siek,0,-0.14869380526046344,-0.8743871803517629
2110815776,Practices of PLDI,2014,2,0,2,0.0,1994117774,Jeremy Gibbons,0,-0.1164726804531344,0.019252515865476
2137417304,Making the future safe for the past adding genericity to the Java programming language,1998,19,460,3,0.0,2201416,Gilad Bracha,0,-2.7264920108471733,0.35307876697654117
2140499691,Why no one uses functional languages,1998,2,78,1,1.0,2060729710,Philip Wadler,0,2.5657952841291967,0.9743144420560936
2111230669,How to solve the reuse problem Functional programming,1998,3,4,1,1.0,2060729710,Philip Wadler,0,2.6761737016587204,-0.20958569991530154
2134879104,Effective quotation relating approaches to language-integrated query,2014,34,8,2,0.0,294205010,Gabriel Radanne,0,-0.4126703924513142,-0.22428914357007051
2183589099,Signed and sealed,2008,11,0,2,1.0,1971600047,Jeremy Yallop,0,-0.30059877319876865,-0.2087157735793062
2186311715,The essence of language-integrated query,2013,34,1,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2153557668,Propositions as sessions,2012,43,88,1,1.0,2060729710,Philip Wadler,0,-0.32189786357926287,0.04573296943427446
2186501980,Propositions as types,2015,34,73,1,1.0,2060729710,Philip Wadler,0,-0.4476868650948577,-0.22235937785132315
2171649093,Monadic constraint programming,2009,26,39,2,0.0,1504167664,Tom Schrijvers,0,1.143531168960178,-0.6108886967815833
2150998213,Well-Typed Programs Cant Be Blamed,2009,36,137,2,0.0,214583831,Robert Bruce Findler,0,-0.3411911518107348,-0.10930537597996878
2168986107,Featherweight Java a minimal core calculus for Java and GJ,1999,26,217,2,0.0,1988947184,Benjamin C. Pierce,0,-3.085494043651918,-0.1029755895260171
2162873316,Applicative style programming program transformation and list operators,1981,25,34,1,1.0,2060729710,Philip Wadler,0,-0.36713668079752393,0.2066079449769292
2172255090,The essence of XML,2003,18,90,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2160241785,Blame for all,2009,26,23,2,0.0,214583831,Robert Bruce Findler,0,-0.37566561534260257,-0.1366295482269304
2148478034,Report on the Programming Language Haskell 98,1999,0,203,5,1.0,285480461,Brian Boutel,0,2.420362979811433,0.18174292001571568
2145714686,An idioms guide to formlets ,2007,20,9,3,1.0,1481625488,Ezra Cooper,0,-0.29473244062710824,0.2678899642785996
2170303094,A located lambda calculus,2010,16,1,2,1.0,1481625488,Ezra Cooper,0,-0.4357149349862437,-0.07644616262503957
2170360634,Strictness analysis aids time analysis,1988,6,62,1,1.0,2060729710,Philip Wadler,0,-0.7687029147220233,-0.27688381195808304
2149935768,How to replace failure by a list of successes a method for exception handling backtracking and pattern matching in lazy functional languages,1985,10,136,1,1.0,2060729710,Philip Wadler,0,0.31980087275746805,-0.6643761645050971
2189250911,Proofs are Programs 19th Century Logic and 21st Century Computing,2000,0,4,1,1.0,2060729710,Philip Wadler,0,-0.37566561534260257,-0.1366295482269304
2269443552,SIGPLAN chairs report,2012,0,0,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2208923056,Deforestation transforming programs to eliminate trees,1988,12,620,1,1.0,2060729710,Philip Wadler,0,-0.3202286415425353,-1.0109653619561654
2295608275,Comprehensive comprehensions,2007,13,36,1,1.0,2060729710,Philip Wadler,0,-0.774446500748358,-0.6227769585432378
2295914203,Comprehending monads,1990,29,674,1,1.0,2060729710,Philip Wadler,0,-0.7261793624351645,-0.28043687757658936
2301309755,Embedding by Normalisation,2016,32,0,3,1.0,941856017,Shayan Najd,0,-0.8682333475528786,-1.3338356218737164
2346315380,Usability of Programming Languages Special Interest Group (SIG) Meeting at CHI 2016,2016,21,3,3,0.0,100279138,Franklyn Turbak,0,2.190161911152157,-0.31001139659750443
2497395527,Functional and Logic Programming,2006,0,1,2,0.0,240110451,Masami Hagiya,0,1.3275256340523507,-0.627037429579149
2481144169,Practical Aspects of Declarative Languages,2003,0,0,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2550953148,A static semantics for Haskell,1992,0,13,1,1.0,2060729710,Philip Wadler,0,-0.36807023623907253,0.004701123986896351
2567996527,Two ways to bake your pizza Translating parameterised types into Java,2000,0,9,3,0.500252,248131350,Martin Odersky,0,-1.5845370624137265,1.003051702245248
2568653835,XQuery A Typed Functional Language for Querying XML,2002,2,160,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2553229513,Mixing Metaphors Actors as Channels and Channels as Actors,2017,0,1,1,1.0,2060729710,Philip Wadler,0,-0.1575163223529018,0.11653406939728907
2507854753,Technical Perspective Why didnt I think of that ,2016,6,0,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2726698084,Mixed Messages Measuring Conformance and Non-Interference in TypeScript (Artifact),2017,0,1,1,1.0,2060729710,Philip Wadler,0,-0.300009271669173,-0.14933143000566468
2591126073,A prettier printer,2002,1,60,1,1.0,2060729710,Philip Wadler,0,-0.38901598959897904,-0.1717544847772182
2728359856,Mixed Messages Measuring Conformance and Non-Interference in TypeScript,2017,0,6,1,1.0,2060729710,Philip Wadler,0,-0.4375883976890881,-0.10161569257838524
2621168830,Monads for functional programming,1992,0,44,1,1.0,2060729710,Philip Wadler,0,-0.37216282809561324,0.0792075289583596
2604845086,Formal Methods for Components and Objects,2006,0,0,3,1.0,1481625488,Ezra Cooper,0,-0.0858108722570497,0.3118956755355936
2736821074,Gradual session types,2017,68,18,1,1.0,2060729710,Philip Wadler,0,-0.34715787664954734,0.054959186716800563
2767258384,Refinement reflection complete verification with SMT,2017,54,6,2,0.228425,80833164,Niki Vazou,0,-0.3586138265062413,0.013254046634487426
2751718667,Quantified class constraints,2017,37,15,2,0.0,1504167664,Tom Schrijvers,0,-0.32252037607304906,-0.4629304745648232
2794476050,A semi-monad for semi-structured data (ICDT version),2001,0,0,1,1.0,2060729710,Philip Wadler,0,-0.27178038176053576,-0.06532460580029252
2799730491,Programming Languages and Systems,2010,0,0,1,1.0,2060729710,Philip Wadler,0,-0.1164726804531344,0.019252515865476
2792756362,Functional Programming Glasgow 1991,1992,0,3,1,1.0,2060729710,Philip Wadler,0,-0.4092206616038536,-0.0401083610130616
2796564118,Programming Languages and Systems,2009,0,0,2,0.0,214583831,Robert Bruce Findler,0,-0.1164726804531344,0.019252515865476
2783482882,A statically safe alternative to virtual types,1998,0,112,3,0.711475,248131350,Martin Odersky,0,-0.31341708089797066,-0.11531142944089345
2912261953,COCHIS Stable and coherent implicits,2019,54,3,2,0.0,1504167664,Tom Schrijvers,0,-0.9053129617340401,-0.3494944376384235
2909657011,Mixed Messages Measuring Conformance and Non-Interference in TypeScript,2017,0,0,1,1.0,2060729710,Philip Wadler,0,-0.4375883976890881,-0.10161569257838524
2898994572,Refinement Reflection Complete Verification with SMT,2018,0,11,2,0.228425,80833164,Niki Vazou,0,-0.36695640281114295,0.11097338344148797
2917086952,Proceedings of the 1991 Glasgow Workshop on Functional Programming,1991,0,2,1,1.0,2060729710,Philip Wadler,0,-0.4092206616038536,-0.0401083610130616
2910425810,Mixed Messages Measuring Conformance and Non-Interference in TypeScript,2017,0,0,1,1.0,2060729710,Philip Wadler,0,-0.4375883976890881,-0.10161569257838524
2913945384,Proceedings of the fifth ACM SIGPLAN international conference on Functional programming,2000,0,0,2,0.500252,248131350,Martin Odersky,0,-0.4092206616038536,-0.0401083610130616
2913975488,Proceedings of the 8th international conference on Functional and Logic Programming,2006,0,0,2,0.0,240110451,Masami Hagiya,0,-0.1164726804531344,0.019252515865476
2897762392,Programming Language Foundations in Agda,2020,38,0,2,0.0,96750307,Jeremy G. Siek,0,-0.050665149226813554,0.05419787949962436
2949640333,Everything old is new again Quoted Domain Specific Languages,2015,29,0,3,1.0,941856017,Shayan Najd,0,-0.2366002606599715,0.0668458755185094
2950679151,Gradual Session Types,2018,77,0,1,1.0,2060729710,Philip Wadler,0,0.34798194582344943,-0.13418242764191476
2986739529,Gradual session types,2019,87,0,1,1.0,2060729710,Philip Wadler,0,0.34798194582344943,-0.13418242764191476
2969648868,Report on the programming language Haskell a non-strict purely functional language,1990,0,7,1,1.0,2060729710,Philip Wadler,0,-0.27112932917860616,-0.6533757704844917
3020116172,Programming Language Foundations in Agda,2018,16,6,1,1.0,2060729710,Philip Wadler,0,0.09538320102450074,0.14087525245436464
3026652841,Featherweight Go,2020,22,0,3,0.0,1491562081,Bernardo Toninho,0,-0.3042643556574409,-0.018947641743180896
