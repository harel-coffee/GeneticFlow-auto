171295454,Array abstractions from proofs,2007,32,103,1,1.0,2068611990,Ranjit Jhala,0,0.12404409619833588,0.7468350520561411
144372381,CSolve verifying c with liquid types,2012,9,8,2,1.0,1982278514,Alexander Bakst,0,0.31595650259323577,0.1142192732616649
163817877,Verification Model Checking and Abstract Interpretation,2011,0,0,1,1.0,2068611990,Ranjit Jhala,0,2.317476593838428,-0.8946698329248102
167580652,Proceedings of the 5th ACM workshop on Programming languages meets program verification,2011,0,0,2,0.0,334995135,Wouter Swierstra,0,-0.28646958959502067,-0.6376317452246477
1540852292,The BLAST software verification system,2005,13,15,1,1.0,2068611990,Ranjit Jhala,0,0.9556771919724646,0.30795400633598163
1492527352,Checking memory safety with blast,2005,27,43,1,1.0,2068611990,Ranjit Jhala,0,0.49578725058491263,-0.014605235330224635
1554764512,State of the union type inference via Craig interpolation,2007,23,18,1,1.0,2068611990,Ranjit Jhala,0,0.38598602023569945,0.2879768907504518
1556262481,The Blast Query Language for Software Verification,2004,21,66,2,0.0,46689790,Adam Chlipala,0,1.037762401205559,0.3548388190445629
1556462035,Temporal-Safety Proofs for Systems Code,2002,22,150,3,0.0,281330718,George C. Necula,0,1.2159481743062945,-0.08314011644711383
1837291589,Refinement type inference via abstract interpretation,2010,0,6,2,0.0490477,1977451747,Andrey Rybalchenko,0,-0.33379923692839997,0.2938344319386921
1838262081,Dsolve safety verification via liquid types,2010,8,10,1,1.0,2068611990,Ranjit Jhala,0,0.37510945650772876,0.8363379379672989
1577404745,The software model checker BLAST Applications to software engineering,2007,84,510,1,1.0,2068611990,Ranjit Jhala,0,1.2240505810581879,-0.11116155123244903
1595685378,The software model checker B last Applications to software engineering,2007,0,306,1,1.0,2068611990,Ranjit Jhala,0,2.2593386940272375,-0.4474076755202064
1906419815,From Safety To Termination And Back SMT-Based Verification For Lazy Languages,2014,36,1,2,1.0,80833164,Niki Vazou,0,0.15337680179584234,-0.16355971725225674
1596552075,Software verification with BLAST,2003,7,370,1,1.0,2068611990,Ranjit Jhala,0,1.333727645214669,-0.04634480511036473
1675514321,Nested Refinements for Dynamic Languages,2011,33,2,2,1.0,2057773111,Ravi Chugh,0,-0.19537854269507235,0.0154707632042657
1684329984,Predicate Abstraction for Linked Data Structures,2016,39,2,2,1.0,1982278514,Alexander Bakst,0,0.1050289681417801,0.12280999705983087
1599881069,Software verification with liquid types,2012,0,0,1,1.0,2068611990,Ranjit Jhala,0,0.8763901659862167,-0.2604074596311629
1923535011,HMC verifying functional programs using abstract interpreters,2011,39,42,2,0.0490477,1977451747,Andrey Rybalchenko,0,0.08102467751601689,-0.11756211386947782
1624564768,Software verification with liquid types,2011,0,0,1,1.0,2068611990,Ranjit Jhala,0,0.8763901659862167,-0.2604074596311629
2020635000,Invited talk the blast query language for software verification,2004,16,3,2,0.0,46689790,Adam Chlipala,0,2.100713604668744,-0.554681950721963
2015542055,Bit level types for high level reasoning,2006,22,1,1,1.0,2068611990,Ranjit Jhala,0,-0.7623307565400328,0.8208272498270068
2045900383,Refinement types for Haskell,2014,37,94,3,0.0,77990519,Dimitrios Vytiniotis,0,-0.22337709613190418,-0.036276099503246076
2048335168,Invited talk the blast query language for software verification,2004,16,9,2,0.0,46689790,Adam Chlipala,0,2.100713604668744,-0.554681950721963
2088139180,Race checking by context inference,2004,27,165,1,1.0,2068611990,Ranjit Jhala,0,0.05103183394511529,0.5135759432739109
2081840025,Software model checking,2009,242,288,1,1.0,2068611990,Ranjit Jhala,0,0.23736551645349716,0.14878282015512023
2135322712,Type-based data structure verification,2009,22,52,1,1.0,2068611990,Ranjit Jhala,0,-0.13777717943269047,0.03250284528045218
2106281135,Deterministic parallelism via liquid effects,2012,31,16,2,1.0,1982278514,Alexander Bakst,0,-0.21225526731020392,-0.008502035910042338
2109394703,Joining dataflow with predicates,2005,30,53,1,1.0,2068611990,Ranjit Jhala,0,0.29185837302597806,-0.04175857152342223
2139143398,LiquidHaskell experience with refinement types in the real world,2014,41,27,2,1.0,80833164,Niki Vazou,0,-0.2440588115236062,-0.04853444182669523
2119006541,Interprocedural analysis of asynchronous programs,2007,28,74,1,1.0,2068611990,Ranjit Jhala,0,-0.0431530920486997,0.483663848083993
2143928515,Nested refinements a logic for duck typing,2012,37,32,2,1.0,2057773111,Ravi Chugh,0,-0.19537854269507235,0.0154707632042657
2134724755,An eclipse plug-in for model checking,2004,7,12,1,1.0,2068611990,Ranjit Jhala,0,0.1392731651604664,0.09997111715406262
2125995229,Abstract refinement types,2013,29,52,2,1.0,80833164,Niki Vazou,0,-0.17124128348713766,0.28254448457358
2134890934,Mace language support for building distributed systems,2007,39,175,3,0.0,295064773,Amin Vahdat,0,0.18244819755036465,-0.5241888336756632
2165304392,Staged information flow for javascript,2009,33,193,3,0.0,2031839565,Jeffrey A. Meister,0,-0.6202075918767755,-0.5340157327101619
2151463894,Abstractions from proofs,2004,29,479,1,1.0,2068611990,Ranjit Jhala,0,0.03369744285263729,0.12164879197028758
2163551975,Deep typechecking and refactoring,2008,17,17,4,0.0,187474749,Zachary Tatlock,0,0.42361138746427773,-0.16607118995593428
2152456366,Bounded refinement types,2015,27,11,3,1.0,80833164,Niki Vazou,0,-0.2427733110701002,0.15356957330249182
2149469095,Dependent types for JavaScript,2012,35,64,2,1.0,2057773111,Ravi Chugh,0,-0.40835193944549825,0.0279729280145322
2155962559,Dataflow analysis for concurrent programs using datarace detection,2008,29,47,3,0.0,1969885515,Jan W. Voung,0,-0.17127883513504555,0.034593845401945024
2167995056,Verifying GPU kernels by test amplification,2012,34,41,1,1.0,2068611990,Ranjit Jhala,0,0.03713648315822745,0.3203749113203159
2240147613,Trust but Verify Two-Phase Typing for Dynamic Languages,2015,30,4,2,1.0,315002404,Panagiotis Vekris,0,-0.23818605769226597,0.07587347139789573
2215196193,Type Targeted Testing,2015,28,22,2,1.0,80833164,Niki Vazou,0,1.7258465922305264,-0.4370032742412436
2293756656,Lock allocation,2007,19,70,1,1.0,2068611990,Ranjit Jhala,0,-0.17419003817090598,0.752333520603023
2294152467,Permissive interfaces,2005,18,89,1,1.0,2068611990,Ranjit Jhala,0,-0.028753677086267908,-0.16889914016776328
2295903414,Lazy abstraction,2002,102,1028,1,1.0,2068611990,Ranjit Jhala,0,0.6551676179528996,-0.7988118450227157
2295923951,Liquid types,2008,60,231,1,1.0,2068611990,Ranjit Jhala,0,-0.4423650560799409,0.30540456798451104
2340618214,Refinement types for TypeScript,2016,40,15,2,1.0,315002404,Panagiotis Vekris,0,-0.5075523563320011,-6.6370470243086e-05
2467676678,Dynamic Witnesses for Static Type Errors,2016,0,5,2,0.0,1977991679,Westley Weimer,0,-0.2977793363680303,-0.14874399176364264
2466269612,Temporal-safety proofs for systems code,2002,0,33,3,0.0,281330718,George C. Necula,0,1.2159481743062945,-0.08314011644711383
2535941679,Refinement Reflection (or how to turn your favorite language into a proof assistant using SMT),2016,19,2,2,1.0,80833164,Niki Vazou,0,-0.3009809196159323,0.14569613657301583
2654868256,Finding and Preventing Bugs in JavaScript Bindings,2017,53,9,2,0.0,1747334957,Riad S. Wahby,0,0.24005977717206375,-0.08958675294706502
2610831210,Refinement types for Haskell,2014,33,4,1,1.0,2068611990,Ranjit Jhala,0,-0.26923770006358166,0.18549504778644485
2665435472,Local Refinement Typing,2017,36,1,1,1.0,2068611990,Ranjit Jhala,0,-0.42073228918242656,0.0890925496555937
2766052299,FaCT A Flexible Constant-Time Programming Language,2017,28,9,1,1.0,2068611990,Ranjit Jhala,0,0.026206767441720513,-0.026554816162500494
2763294113,Verifying distributed programs via canonical sequentialization,2017,54,13,3,1.0,1241764324,Klaus v. Gleissenthall,0,-0.43750300710388484,-0.10561108960303196
2742741821,Deriving Law-Abiding Instances,2017,5,0,2,1.0,80833164,Niki Vazou,0,-0.8782377605988914,-0.13231088673585256
2767258384,Refinement reflection complete verification with SMT,2017,54,6,3,1.0,80833164,Niki Vazou,0,-0.3586138265062413,0.013254046634487426
2803616382,Predicate Abstraction for Program Verification,2018,56,8,2,0.0,1977451747,Andrey Rybalchenko,0,-0.1699623318509144,0.054839189898738594
2804829712,Dynamic witnesses for static type errors (or Ill-Typed Programs Usually Go Wrong),2018,8,0,2,0.0,1977991679,Westley Weimer,0,-0.1164726804531344,0.019252515865476
2844374497,Verification Model Checking and Abstract Interpretation 12th International Conference VMCAI 2011 Austin TX USA January 23-25 2011 Proceedings,2011,0,0,1,1.0,2068611990,Ranjit Jhala,0,-0.36669543441347335,0.044849700580217124
2912212618,Proceedings of the 12th international conference on Verification model checking and abstract interpretation,2011,0,0,1,1.0,2068611990,Ranjit Jhala,0,-0.36669543441347335,0.044849700580217124
2898712586,Verifying Distributed Programs via Canonical Sequentialization,2017,0,1,3,1.0,1241764324,Klaus v. Gleissenthall,0,-0.43117076373901675,-0.11115165916451554
2898807002,Learning to Blame Localizing Novice Type Errors with Data-Driven Diagnosis,2017,0,2,2,0.0,1977991679,Westley Weimer,0,-0.3542458213991138,0.062790734395556
2898994572,Refinement Reflection Complete Verification with SMT,2018,0,11,3,0.791959,80833164,Niki Vazou,0,-0.36695640281114295,0.11097338344148797
2900035213,Pretend Synchrony Synchronous Verification of Asynchronous Distributed Programs,2019,60,13,3,1.0,1241764324,Klaus v. Gleissenthall,0,-0.12458694566246246,-0.0670898669767258
2914987015,Proceedings of the 22nd international conference on Compiler Construction,2013,0,0,2,0.0,2018048180,Koen De Bosschere,0,-0.23680382996095975,0.883709167173769
2951702347,HMC Verifying Functional Programs Using Abstract Interpreters,2010,21,0,2,0.0490477,1977451747,Andrey Rybalchenko,0,-0.03458078233055689,0.6333908297303996
2949947612,Bounded Refinement Types,2015,13,1,3,1.0,80833164,Niki Vazou,0,-0.14854969083137257,0.19442453360103562
2949969177,Refinement Types for TypeScript,2016,25,3,2,1.0,315002404,Panagiotis Vekris,0,-0.4686626919523203,-0.10427529513678678
2950160789,Predicate Abstraction for Linked Data Structures,2015,22,0,2,1.0,1982278514,Alexander Bakst,0,-0.0484944041722131,0.5674050982496165
2955155286,FaCT a DSL for timing-sensitive computation,2019,0,4,3,0.0,1747334957,Riad S. Wahby,0,-0.22503354495571443,-0.013854073371811881
2950340338,Dependent Types for JavaScript,2011,18,2,2,1.0,2057773111,Ravi Chugh,0,-0.40835193944549825,0.0279729280145322
2952939461,Trust but Verify Two-Phase Typing for Dynamic Languages,2015,9,0,2,1.0,315002404,Panagiotis Vekris,0,-0.23818605769226597,0.07587347139789573
2953389284,Dynamic Witnesses for Static Type Errors (or Ill-Typed Programs Usually Go Wrong),2016,42,0,2,0.0,1977991679,Westley Weimer,0,-0.2977793363680303,-0.14874399176364264
2964054648,Local refinement typing,2017,49,3,1,1.0,2068611990,Ranjit Jhala,0,-0.42073228918242656,0.0890925496555937
2995341674,Program Synthesis by Type-Guided Abstraction Refinement,2020,32,1,2,0.13476,1974217900,Nadia Polikarpova,0,-0.5305766012674124,-0.09491522886449011
2986061690,Program Synthesis by Type-Guided Abstraction Refinement,2019,38,0,2,0.13476,1974217900,Nadia Polikarpova,0,-0.552849398956812,-0.07364898862128841
2996075572,Dynamic witnesses for static type errors (or ill-typed programs usually go wrong),2016,42,11,2,0.0,1977991679,Westley Weimer,0,-0.2977793363680303,-0.14874399176364264
3000174839,InFix Automatically Repairing Novice Program Inputs,2019,46,0,2,0.0,1977991679,Westley Weimer,0,-0.1355815949028136,-0.2831913882124807
3014941190,Session details 1A verification,2012,0,0,1,1.0,2068611990,Ranjit Jhala,0,-0.1164726804531344,0.019252515865476
3014747998,Session details Managing concurrency 2,2010,0,0,1,1.0,2068611990,Ranjit Jhala,0,-0.2268142716231431,-0.1590203910320284
